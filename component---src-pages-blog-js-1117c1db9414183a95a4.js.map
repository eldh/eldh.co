{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Bio.js","webpack:///./src/components/layout.js"],"names":["BlogIndex","render","siteTitle","lodash_get__WEBPACK_IMPORTED_MODULE_3___default","this","posts","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","props","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","map","_ref","node","fields","slug","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","to","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","Component","__webpack_exports__","default","m","pageQuery","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","Consumer","staticQueryData","data","query","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","module","exports","__webpack_require__","ProdPageRenderer","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","c","244","e","t","n","d","l","r","o","i","Bio","href","Object","emotion__WEBPACK_IMPORTED_MODULE_3__","injectGlobal","Template","_this$props","header"],"mappings":"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","file":"component---src-pages-blog-js-1117c1db9414183a95a4.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/layout'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet title={siteTitle} />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default class Bio extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>\n          Written by <a href=\"https://twitter.com/eldh\">@eldh</a>\n        </p>\n      </div>\n    )\n  }\n}\n","/* global __PATH_PREFIX__ */\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { injectGlobal } from 'emotion'\n\ninjectGlobal`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  div, p {\n    display: flex;\n    flex-direction: column;\n    flex: 1 0 auto;\n  }\n  p {\n    margin-bottom: 1rem;\n  }\n  html, body {\n    font-family: \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"Segoe UI\",\n      \"Roboto\",\n      \"Roboto Light\",\n      \"Oxygen\",\n      \"Ubuntu\",\n      \"Cantarell\",\n      \"Fira Sans\",\n      \"Droid Sans\",\n      \"Helvetica Neue\",\n      \"sans-serif\",\n      \"Apple Color Emoji\",\n      \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\";\n  }`\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    const blogRootPath = `${__PATH_PREFIX__}/blog`\n\n    const header =\n      location.pathname === rootPath ? null : location.pathname ===\n      blogRootPath ? (\n        <h1>\n          <Link to={'/'}>eldh.co</Link>\n        </h1>\n      ) : (\n        <h3>\n          <Link to={'/blog'}>eldh.co blog</Link>\n        </h3>\n      )\n    return (\n      <div>\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n"],"sourceRoot":""}