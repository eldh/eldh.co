{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015-07-04-react-europe-2015/","webpackCompilationHash":"8c93e71af87d643b289a","result":{"data":{"site":{"siteMetadata":{"title":"eldh.co","author":"Andreas Eldh"}},"markdownRemark":{"id":"55983768-9ddb-5884-aa62-84a7cb4b2a37","html":"<p>After three full days of talks and chats on the topic of one specific javascript framework you would perhaps expect to have a feeling that you have covered every possible aspect of this certain framework, it’s present, past and future.</p>\n<p>This is not the feeling I have after the first React Europe conference. Not at all. I’m leaving Paris after one hackathon and 19 very interesting talks, which covered a surprisingly wide range of topics, still leaving quite a few very relevant interesting areas completely untouched. There was simply not time to cover it all.</p>\n<p>There was no talk on testing. There was no talk on module management. There was no talk on team workflow. There was no talk on deployment challenges. There was no talk on functional programming. Styling and design was touched only briefly. Etc.</p>\n<p>We had more pressing issues to discuss.</p>\n<p>How do we best structure universal apps, which gains do we get from using immutable data and single data stores, how do we handle server communication and data persistence, how do we write server api:s that make the app development and maintainability easier, how can we improve our tooling with hot loading, linting, static code analysis and transpilation, how do we best target multiple platforms, how do we handle complex interactions (touch) and state changes (animation)?</p>\n<p>It is obvious that React and the popularity that it has gained in the last year has brought with it fundamental changes to almost every part of the application development lifecycle. From styling to server structure, from mobile to web to text interfaces.</p>\n<p>React promotes ways of working that have not been mainstream. React changes the best practices.</p>\n<p>And it’s only just started. The pace of innovation on the technologies that surrounds React is simply mind-blowing, and has so far shown no sign of slowing down. It’s telling that in several areas, there aren’t even any publicly available implementation of the principles that are considered to be best practice.</p>\n<p>The React community is vibrant, the willingness to tackle hard problems is impressive to say the least and the progress that is being made is staggering. I feel confident that many other parts of the programming world will be influenced by the advancements being done around React.</p>\n<p>So, was there anything specifically exciting in this great cluster of innovation? GraphQL, Relay and React Native are all interesting, but I’m actually most excited about two other things.</p>\n<p>First, Redux by Dan Abramov is a framework that significantly raises the bar when it comes to developer ergonomics without sacrificing anything in terms of performance or maintainability. It’s simply the new benchmark.</p>\n<p>Second, the work being done around different rendering targets for React shows just how versatile this technology is. The promise of being able to create apps for any target (DOM, iOS, Android, WebGL, wearables, OS X, Windows… yes, anything) is just extremely exciting to me.</p>\n<p>React is everywhere. Everything is changing.</p>\n<p>We live in exciting times.</p>","frontmatter":{"title":"React Europe 2015","language":"english","date":"July 04, 2015"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2015-07-04-react-europe-2015/","previous":{"fields":{"slug":"/2015-01-25-the-zone/"},"frontmatter":{"title":"The Zone"}},"next":null}}}