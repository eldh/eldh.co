{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/QuietText.js","webpack:///./src/pages/blog.js"],"names":["styles","Layout","render","this","props","location","children","header","pathname","css","to","React","Component","QuietP","QuietText","className","BlogIndex","siteTitle","get","posts","filter","node","frontmatter","language","title","meta","name","content","htmlAttributes","lang","map","fields","slug","key","date","pageQuery"],"mappings":"sKAOA,IAAMA,EAAM,+CAINC,E,gLACJC,OAAA,WAAU,IAAD,EACwBC,KAAKC,MAA5BC,EADD,EACCA,SAAUC,EADX,EACWA,SAGZC,EAFY,UAGhBF,EAASG,SACP,kBAAIC,IAAKT,GACP,YAAC,OAAD,CAAMU,GAAI,KAAV,YAGF,kBAAID,IAAKT,GACP,YAAC,OAAD,CAAMU,GAAI,SAAV,iBAGN,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACGH,EACAD,K,GAnBUK,IAAMC,WA0BZX,O,qFCjCf,IAAMY,EAAS,YAAO,IAAP,yHAQTC,E,gLACJZ,OAAA,WACE,OACE,YAACW,EAAD,CAAQE,UAAWZ,KAAKC,MAAMW,WAAYZ,KAAKC,MAAME,W,GAHnCK,IAAMC,WAQfE,O,4RCXTE,E,gLACJd,OAAA,WACE,IAAMe,EAAYC,IAAIf,KAAM,0CACtBgB,EAAQD,IAAIf,KAAM,sCAAsCiB,QAC5D,kBAImB,YAJnB,EACEC,KACEC,YAAeC,YAKrB,OACE,YAAC,IAAD,CAAQlB,SAAUF,KAAKC,MAAMC,UAC3B,YAAC,IAAD,CACEmB,MAAOP,EACPQ,KAAM,CACJ,CACEC,KAAM,cACNC,QAAS,iBAGbC,eAAgB,CACdC,KAAM,QAGTV,EAAMW,KAAI,YAAe,IAAZT,EAAW,EAAXA,KACNG,EAAQN,IAAIG,EAAM,sBAAwBA,EAAKU,OAAOC,KAC5D,OACE,mBACEC,IAAKZ,EAAKU,OAAOC,KACjBvB,IAAG,GAIH,YAAC,IAAD,CACEA,IAAG,GAIFY,EAAKC,YAAYY,MAEpB,sBACE,YAAC,OAAD,CAAMxB,GAAIW,EAAKU,OAAOC,MAAOR,U,GA1CrBb,IAAMC,WAqDfI,YAER,IAAMmB,EAAS","file":"component---src-pages-blog-js-81a3a389f71aee905030.js","sourcesContent":["/* global __PATH_PREFIX__ */\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport Base from './Base'\nimport TextContent from './TextContent'\nimport { css } from '@emotion/core'\n\nconst styles = css`\n  padding-bottom: 2rem;\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { location, children } = this.props\n    const blogRootPath = `${__PATH_PREFIX__}/blog`\n\n    const header =\n      location.pathname === blogRootPath ? (\n        <h1 css={styles}>\n          <Link to={'/'}>eldh.co</Link>\n        </h1>\n      ) : (\n        <h3 css={styles}>\n          <Link to={'/blog'}>eldh.co blog</Link>\n        </h3>\n      )\n    return (\n      <Base>\n        <TextContent>\n          {header}\n          {children}\n        </TextContent>\n      </Base>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst QuietP = styled('p')(css`\n  color: #555;\n  font-size: 13px;\n  @media (prefers-color-scheme: dark) {\n    color: #aaa;\n  }\n`)\n\nclass QuietText extends React.Component {\n  render() {\n    return (\n      <QuietP className={this.props.className}>{this.props.children}</QuietP>\n    )\n  }\n}\n\nexport default QuietText\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport QuietText from '../components/QuietText'\nimport { css } from '@emotion/core'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.blogTitle')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges').filter(\n      ({\n        node: {\n          frontmatter: { language },\n        },\n      }) => language !== 'swedish'\n    )\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          title={siteTitle}\n          meta={[\n            {\n              name: 'description',\n              content: 'eldh.co blog',\n            },\n          ]}\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div\n              key={node.fields.slug}\n              css={css`\n                margin: 0 0 1rem;\n              `}\n            >\n              <QuietText\n                css={css`\n                  margin: 0;\n                `}\n              >\n                {node.frontmatter.date}\n              </QuietText>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              {/* <p dangerouslySetInnerHTML={{ __html: node.excerpt }} /> */}\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        blogTitle\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            language\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}