{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Bio.js","webpack:///./src/components/layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","lodash_get__WEBPACK_IMPORTED_MODULE_4___default","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","frontmatter","date","dangerouslySetInnerHTML","__html","html","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","fields","slug","rel","t","Component","__webpack_exports__","default","f","pageQuery","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","Consumer","staticQueryData","query","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","ProdPageRenderer","_ref","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","c","244","e","n","d","l","r","o","i","Bio","href","Object","emotion__WEBPACK_IMPORTED_MODULE_3__","injectGlobal","Template","_this$props","header","gatsby__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-templates-blog-post-js-7cc573b6e3200c55f403.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/layout'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet title={`${post.frontmatter.title} | ${siteTitle}`} />\n        <h1>{post.frontmatter.title}</h1>\n        <p>{post.frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr />\n        <Bio />\n\n        <ul>\n          {previous && (\n            <li>\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            </li>\n          )}\n\n          {next && (\n            <li>\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            </li>\n          )}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default class Bio extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>\n          Written by <a href=\"https://twitter.com/eldh\">@eldh</a>\n        </p>\n      </div>\n    )\n  }\n}\n","/* global __PATH_PREFIX__ */\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { injectGlobal } from 'emotion'\n\ninjectGlobal`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  div, p {\n    display: flex;\n    flex-direction: column;\n    flex: 1 0 auto;\n  }\n  p {\n    margin-bottom: 1rem;\n  }\n  html, body {\n    font-family: \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"Segoe UI\",\n      \"Roboto\",\n      \"Roboto Light\",\n      \"Oxygen\",\n      \"Ubuntu\",\n      \"Cantarell\",\n      \"Fira Sans\",\n      \"Droid Sans\",\n      \"Helvetica Neue\",\n      \"sans-serif\",\n      \"Apple Color Emoji\",\n      \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\";\n  }`\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    const blogRootPath = `${__PATH_PREFIX__}/blog`\n\n    const header =\n      location.pathname === rootPath ? null : location.pathname ===\n      blogRootPath ? (\n        <h1>\n          <Link to={'/'}>eldh.co</Link>\n        </h1>\n      ) : (\n        <h3>\n          <Link to={'/blog'}>eldh.co blog</Link>\n        </h3>\n      )\n    return (\n      <div>\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n"],"sourceRoot":""}