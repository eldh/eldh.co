{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["BlogIndex","render","siteTitle","lodash_get__WEBPACK_IMPORTED_MODULE_3___default","this","posts","filter","_ref","node","frontmatter","language","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","props","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","meta","name","content","htmlAttributes","lang","map","_ref2","fields","slug","key","className","Object","emotion__WEBPACK_IMPORTED_MODULE_7__","css","_components_QuietText__WEBPACK_IMPORTED_MODULE_6__","date","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","to","Component","pageQuery"],"mappings":"sPASMA,4FACJC,kBACE,IAAMC,EAAYC,IAAIC,KAAM,0CACtBC,EAAQF,IAAIC,KAAM,sCAAsCE,OAC5D,SAAAC,GAAA,MAImB,YAJnBA,EACEC,KACEC,YAAeC,WAKrB,OACEC,EAAAC,EAAAC,cAACC,EAAAF,GAAOG,SAAUX,KAAKY,MAAMD,UAC3BJ,EAAAC,EAAAC,cAACI,EAAAL,GACCM,MAAOhB,EACPiB,OAEIC,KAAM,cACNC,QAAS,iBAGbC,gBACEC,KAAM,QAGTlB,EAAMmB,IAAI,SAAAC,GAAc,IAAXjB,EAAWiB,EAAXjB,KACNU,EAAQf,IAAIK,EAAM,sBAAwBA,EAAKkB,OAAOC,KAC5D,OACEhB,EAAAC,EAAAC,cAAA,OACEe,IAAKpB,EAAKkB,OAAOC,KACjBE,UAAWC,OAAAC,EAAAC,IAAAF,CAAX,qBAIAnB,EAAAC,EAAAC,cAACoB,EAAArB,GACCiB,UAAWC,OAAAC,EAAAC,IAAAF,CAAX,cAICtB,EAAKC,YAAYyB,MAEpBvB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsB,EAAAC,MAAKC,GAAI7B,EAAKkB,OAAOC,MAAOT,WA1CvClB,CAAkBW,EAAAC,EAAM0B,uBAuDvB,IAAMC","file":"component---src-pages-blog-js-15b93d90616e678cfe30.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport QuietText from '../components/QuietText'\nimport { css } from 'emotion'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.blogTitle')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges').filter(\n      ({\n        node: {\n          frontmatter: { language },\n        },\n      }) => language !== 'swedish'\n    )\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          title={siteTitle}\n          meta={[\n            {\n              name: 'description',\n              content: 'eldh.co blog',\n            },\n          ]}\n          htmlAttributes={{\n            lang: 'en',\n          }}\n        />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div\n              key={node.fields.slug}\n              className={css`\n                margin: 0 0 1rem;\n              `}\n            >\n              <QuietText\n                className={css`\n                  margin: 0;\n                `}\n              >\n                {node.frontmatter.date}\n              </QuietText>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              {/* <p dangerouslySetInnerHTML={{ __html: node.excerpt }} /> */}\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        blogTitle\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            language\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}